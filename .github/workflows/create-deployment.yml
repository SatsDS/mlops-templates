name: create-deployment

on:
  workflow_call:
    inputs:
      endpoint_file:
        required: true
        type: string
      registry_name:
        required: true
        type: string
      deployment_resource_group:
        required: true
        type: string
      deployment_workspace_name:
        required: true
        type: string
      endpoint_name:
        required: true
        type: string
      endpoint_type:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
      model_name:
        required: true
        type: string
      update_version_file:
        required: true
        type: string
    secrets:
      creds:
        required: true
jobs:
  create-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: "Az CLI login"
        uses: azure/login@v2
        with:
          creds: ${{secrets.creds}}
          enable-AzPSSession: true
      - name: install-extension
        run: az extension add -n ml -y
      - name: update-extension
        run: az extension update -n ml
      - name: get-model-version
        run: |
          model_version=$(az ml model list --name ${{ inputs.model_name }} --registry-name ${{ inputs.registry_name }} --query "[0].{Version:version}" --output tsv)
          if [[ -z "$model_version" ]]
          then
            echo "Model version extraction failed"
            exit 1
          fi
          echo "MODEL_VERSION=$model_version" >> $GITHUB_ENV
      - name: update-deployment-file
        run: |
          python ${{ inputs.update_version_file }} ${{ env.MODEL_VERSION }} ${{ inputs.endpoint_file }} deployment.yml
      - name: create-batch-deployment
        run: |
          az ml ${{ inputs.endpoint_type }}-deployment create --name ${{ inputs.deployment_name }} --endpoint ${{ inputs.endpoint_name }} \
          -f ${{ github.workspace }}/${{ env.UPDATED_DEPLOYMENT_YAML }} --resource-group ${{ inputs.deployment_resource_group }} \
          --workspace-name ${{ inputs.deployment_workspace_name }}
